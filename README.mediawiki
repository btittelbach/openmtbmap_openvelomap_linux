__NOTOC__
= Linux/Unix script to compile garmin *.img map files from openmtbmap.org or openvelomap.org files =

=== Requirements ===

* zsh
* 7z
* mkgmap OR wine

you can obtain mkgmap with your package manager or from http://www.mkgmap.org.uk/snapshots/

gmt linux version can be downloaded from http://www.gmaptool.eu/en/content/gmaptool

==== Installation of required files on Debian/Ubuntu ====

  sudo apt-get install zsh p7zip-full
  wget http://www.gmaptool.eu/sites/default/files/lgmt08220.zip
  unzip lgmt08220.zip gmt
  sudo mv gmt /usr/local/bin/

also, get newest mkgmap from http://www.mkgmap.org.uk/snapshots/ and install (aka copy) it to e.g. /usr/local/share/mkgmap/

==== Installation of required files on Gentoo ====

  emerge zsh p7zip mkgmap
  wget http://www.gmaptool.eu/sites/default/files/lgmt08220.zip
  unzip lgmt08220.zip gmt
  sudo mv gmt /usr/local/bin/

==== Installation of required files on openSUSE ====  

  add GEO-repo from opensuse's open build service according to your version
  http://download.opensuse.org/repositories/Application:/Geo/
  e.g. http://download.opensuse.org/repositories/Application:/Geo/ for openSUSE 13.1
  Using YaST - "Software Management" to search for and install GMT, mkgmap and p7zip
  
  Alternativly use the following commands on the command line
  zypper ar http://download.opensuse.org/repositories/Application:/Geo/openSUSE_13.1/ GEO
  zypper ref
  zypper in p7zip mkgmap GMT
  
==== Installation with Singularity ====

Alternatively, you can build a Singularity container with all the dependencies:

  singularity build --fakeroot create_omtb_garmin_img.sif Singularity

To execute the script from within the container:
   
  singularity run create_omtb_garmin_img.sif \
       create_omtb_garmin_img.sh [options] <mtb*.exe|velo*.exe> <TYP-file or TYP-style>

=== Usage ===

  Usage: create_omtb_garmin_img.sh [options] <mtb*.exe|velo*.exe> <TYP-file or TYP-style>
     as TYP-style you can choose:
     For OpenMTB-maps:
       clas: Classic layout - optimized for Vista/Legend series.
       thin: Thinner tracks and pathes - optimized for Gpsmap60/76 series.
       wide: High contrast layout, like classic but with white forest - optimized for Oregon/Colorado displays.
       hike: Like classic layout - but optimized for hiking (does not show mtb/bicycle informations).
       easy: Similar to classic layout - focused on easy readability, not showing mtb/bicycle information except routes.
     For OpenVelo-maps:
       velo: Layout optimized for small GPS screen
       velw: Wide layout optimized for high DPI screens like Oregon
       race: Clean layout for road biking. No buildings or features.
     or give the path to your own .TYP style file
  Options:
     -g <path/to/gmt>
     -m <path/to/mkgmap.jar>
     -o <path/to/outputdir>
